
#+include: ~/org/OSX.org::CMakeLists
#+include: ~/org/OSX.org::compile_commands
* CCLS issue
** https://github.com/MaskRay/ccls/issues/622#issuecomment-623115650

#+BEGIN_SRC sh
cmake -H. -BRelease -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/Users/yunj/local/clang+llvm-10.0.0-x86_64-apple-darwin/ -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/ccls/HEAD-c5acf62 -DUSE_SYSTEM_RAPIDJSON=OFF -DCMAKE_CXX_COMPILER=/Users/yunj/local/clang+llvm-10.0.0-x86_64-apple-darwin/bin/clang++
#+END_SRC
* compiledb-generator
#+BEGIN_SRC sh
conda activate compiledb

compiledb -n make -f /Users/yunj/stan-dev/math/make/standalone main # extract compile commands without executing the actual build

make -w -f /Users/yunj/stan-dev/math/make/standalone main | tee build_log.txt
compiledb < build_log.txt # extract compile commands from the build log previously generated
#+END_SRC

#+RESULTS:
** compilation database
#+BEGIN_SRC json
[
 {
  "directory": "/Users/yunj/Dropbox/research/lsjm-art/lsjm-code",
  "arguments": [
   "clang++",
   "-std=c++1y",
   "-Wno-unknown-warning-option",
   "-Wno-tautological-compare",
   "-Wno-sign-compare",
   "-D_REENTRANT",
   "-I",
   "/Users/yunj/stan-dev/math/lib/tbb_2019_U8/include",
   "-O3",
   "-I",
   "/Users/yunj/stan-dev/math/",
   "-I",
   "/Users/yunj/stan-dev/math/lib/eigen_3.3.7",
   "-I",
   "/Users/yunj/stan-dev/math/lib/boost_1.72.0",
   "-I",
   "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/include",
   "-DBOOST_DISABLE_ASSERTS",
   "-Wl,-L,/Users/yunj/stan-dev/math/lib/tbb",
   "-Wl,-rpath,/Users/yunj/stan-dev/math/lib/tbb",
   "main.cpp",
   "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/lib/libsundials_nvecserial.a",
   "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/lib/libsundials_cvodes.a",
   "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/lib/libsundials_idas.a",
   "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/lib/libsundials_kinsol.a",
   "/Users/yunj/stan-dev/math/lib/tbb/libtbb.dylib",
   "/Users/yunj/stan-dev/math/lib/tbb/libtbbmalloc.dylib",
   "/Users/yunj/stan-dev/math/lib/tbb/libtbbmalloc_proxy.dylib",
   "-o",
   "main"
  ],
  "file": "main.cpp"
 }
]
#+END_SRC


add directories from =clang -fsyntax-only -v -xc++ /dev/null= (not /usr/include).
remove boost directory.
* working version
edited a few lines from compiledb-generator and [[file:compile_commands.json][SAHMC one]]
#+BEGIN_SRC json :tangle compile_commands.json
[
    {
        "directory": "/Users/yunj/Dropbox/research/lsjm-art/lsjm-code",
        "arguments": [
            "clang++",
            "-std=c++1y",
            "-Wno-unknown-warning-option",
            "-Wno-tautological-compare",
            "-Wno-sign-compare",
            "-D_REENTRANT",
            "-I",
            "/Users/yunj/stan-dev/math/lib/tbb_2019_U8/include",
            "-O3",
            "-I",
            "/Users/yunj/stan-dev/math/",
            "-I",
            "/Users/yunj/stan-dev/math/lib/eigen_3.3.7",
            "-I",
            "/Users/yunj/stan-dev/math/lib/boost_1.72.0",
            "-I",
            "/Users/yunj/stan-dev/math/lib/sundials_5.2.0/include",
            "-DBOOST_DISABLE_ASSERTS",
            "-Wl,-L,/Users/yunj/stan-dev/math/lib/tbb",
            "-Wl,-rpath,/Users/yunj/stan-dev/math/lib/tbb",
            "-I",
            "/Library/Developer/CommandLineTools/usr/include/c++/v1",
            "-I",
            "/Library/Developer/CommandLineTools/usr/lib/clang/11.0.0/include",
            "-I",
            "/Library/Developer/CommandLineTools/usr/include",
            "-I",
            "/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include",
            "-isysroot/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include",
            "-g",
            "-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk",
            "-o",
            "main.cpp.o",
            "-c",
            "main.cpp"
        ],
        "file": "main.cpp"
    }
]
#+END_SRC

* MakeFile
#+BEGIN_SRC sh :tangle Makefile
MATH=/Users/yunj/stan-dev/math/

main:
	make -f $(MATH)make/standalone main

.PHONY: clean

clean:
	rm main
#+END_SRC
* CMAKE
 #+begin_src cmake :tangle CMakeLists.txt
 cmake_minimum_required(VERSION 3.0)
 project(lsjm-code)

 set(MATH /Users/yunj/stan-dev/math)
 set(Xcode_CLT /Library/Developer/CommandLineTools)

 set(CMAKE_CXX_FLAGS_DEBUG "-g")
 set(CMAKE_CXX_FLAGS_RELEASE "-O3")

 # set(CMAKE_CXX_STANDARD 11)

 # # STAN math lib
 include_directories(${MATH}/lib/tbb_2019_U8/include)
 include_directories(${MATH})
 include_directories(${MATH}/lib/eigen_3.3.7)
 include_directories(${MATH}/lib/boost_1.72.0)
 include_directories(${MATH}/lib/sundials_5.2.0/include)

 # xcode commandline toolchain
 include_directories(${Xcode_CLT}/usr/include/c++/v1)
 include_directories(${Xcode_CLT}/usr/lib/clang/11.0.0/include)
 include_directories(${Xcode_CLT}/usr/include)
 include_directories(${Xcode_CLT}/SDKs/MacOSX.sdk/usr/include)

 # set compiler
 # SET(CMAKE_CXX_COMPILER "/usr/bin/clang++")
 # SET(CMAKE_CC_COMPILER "/usr/bin/clnag")

 # c++ linker
 # SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -isystem/Library/Developer/CommandLineTools/usr/include/c++/v1")
 SET(CMAKE_CXX_FLAGS  "-std=c++1y -Wno-unknown-warning-option -Wno-tautological-compare -Wno-sign-compare -D_REENTRANT ${CMAKE_CXX_FLAGS}")
 SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -DBOOST_DISABLE_ASSERTS")
 SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wl,-L,${MATH}/lib/tbb -Wl,-rpath,${MATH}/lib/tbb")
 SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -isysroot ${Xcode_CLT}/SDKs/MacOSX.sdk/usr/include")
 SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk")
 # SET(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -Wno-unused-parameter -Wno-unused-local-typedef -Wno-unused-function -Wno-ignored-qualifiers -Wno-unused-variable -Wno-sign-compare -Wno-infinite-recursion")
 add_executable(main main.cpp)
 target_link_libraries(main ${CMAKE_CXX_FLAGS} ${MATH}/lib/sundials_5.2.0/lib/libsundials_nvecserial.a ${MATH}/lib/sundials_5.2.0/lib/libsundials_cvodes.a ${MATH}/lib/sundials_5.2.0/lib/libsundials_idas.a ${MATH}/lib/sundials_5.2.0/lib/libsundials_kinsol.a ${MATH}/lib/tbb/libtbb.dylib ${MATH}/lib/tbb/libtbbmalloc.dylib ${MATH}/lib/tbb/libtbbmalloc_proxy.dylib)
 #+end_src

** Generate =compile_commands.json= using CMAKE
 #+begin_src sh :async
rm -rf CMakeFiles/ Debug/ cmake_install.cmake CMakeCache.txt Makefile compile_commands.json
# export CXX="/usr/local/opt/llvm/bin/clang++"
# export CC="/usr/local/opt/llvm/bin/clang"
cmake -H. -BDebug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=YES
ln -s Debug/compile_commands.json
cmake .
 #+end_src
* Check if CCLS works
To see if ccls works:
#+BEGIN_SRC sh :async
rm -rf .ccls-cache
ccls --index=. -v=3
#+END_SRC

Prevent Dropbox from syncing a large cache folder:
#+BEGIN_SRC sh
mkdir -p ~/workspace/cache/lsjm-code
mv .ccls-cache ~/workspace/cache/lsjm-code/
ln -s ~/workspace/cache/lsjm-code/.ccls-cache
#+END_SRC
